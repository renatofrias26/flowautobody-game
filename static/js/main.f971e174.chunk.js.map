{"version":3,"sources":["components/Navbar.js","components/Section1.js","components/Section2.js","components/Section3.js","components/Section4.js","components/Section5.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","scrollToTop","scroll","className","id","activeClass","to","spy","smooth","offset","duration","Component","Section","title","subtitle","dark","api","App","useState","Response","Guess","Tries","Data","setData","guessNumber","increment","lastState","onClick","repeat","data","applicantId","gameId","guess","axios","put","auth","username","password","then","response","result","Math","round","console","log","catch","error","Section4","Section5","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f971e174.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\n\r\nexport default class Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\" id=\"navbar\">\r\n        <div className=\"nav-content\">\r\n          <ul className=\"nav-items\">\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section1\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                About Me\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section2\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Step 1\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section3\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Step 2\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section4\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Step 3\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"section5\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Step 4\r\n              </Link>\r\n            </li>\r\n           </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default function Section({ title, subtitle, dark, id }) {\r\n//   var shadow={\r\n//     boxShadow: \"4px 4px 0px var(--red)\"\r\n// }\r\n\r\nreturn (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")} id={id}>\r\n      <div className=\"section-content limit-width\">\r\n        <h1>Hello, I'm Renato Frias.</h1>\r\n        <p>I'm a full time web developer at Kay by Design for nearly 2 years. I've graduated on Digital Media Interaction Design and got my job straight away. The biggest issue    and advantage at the same time, was that I never had any one guide me. It has always been me working by meself.</p>\r\n        <p>I've always been a curious person, I love learn and understand thing in general. But lately I'm getting myself doing the same things over and over again at my current job. There is no exitment anymore.\r\n        \r\n        <p>I'm looking for a place where I have the chance be my best version, have the chance to apply and test new skills but have the confidence that I will always count with a backup (mentor) to guide me if anything goes out of shape.</p>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Highlight from 'react-highlight'\r\nimport 'highlight.js/styles/atom-one-dark.css';\r\n\r\nexport default function Section({ title, subtitle, dark, id }) {\r\n\r\nreturn (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")} id={id}>\r\n      <div className=\"section-content \">\r\n      <h1>First Task</h1>\r\n       <div className=\"two-columns padding-top\">\r\n            <div className=\"half-column\">\r\n                 <h4>Instructions:</h4>\r\n                <p>Hi, welcome to Flow Autobody's coding challenge.</p>\r\n                   <p>Here's how to apply:</p>\r\n                   <p>HTTP Post to <b>/apply</b></p>\r\n                   <p>Use Basic Auth with username 'flow applicant' and password 'lets code'</p>\r\n                   <p>Add two fields: preferredName and emailAddress</p>\r\n                   <p>See you at the next step</p>\r\n          </div>\r\n          <div className=\"half-column code\" id=\"\">\r\n            <Highlight className='javascript'>\r\n                {`\r\nconst url = 'https://game.flowautobody.com.au/apply'\r\nconst data = {\r\n              preferredName:'Renato',\r\n              emailAddress:'renatofrias@outlook.com',\r\n             }\r\n  axios.post(url, data, {\r\n              auth: {\r\n                     username: \"flow applicant\",\r\n                     password: \"lets code\",\r\n                    },\r\n              })\r\n        .then(function (response) { console.log(response);})\r\n        .catch(function (error) { console.log(error);});\r\n                `}\r\n            </Highlight>\r\n            </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Highlight from 'react-highlight'\r\nimport 'highlight.js/styles/atom-one-dark.css';\r\n\r\nexport default function Section({ title, subtitle, dark, id }) {\r\n\r\nreturn (\r\n    <div className={\"section\" + (dark ? \" section-dark\" : \"\")} id={id}>\r\n      <div className=\"section-content\">\r\n      <h1>Second Task</h1>\r\n       <div className=\"two-columns padding-top\">\r\n            <div className=\"half-column\">\r\n                 <h4>Instructions:</h4>\r\n                 <p>Thanks Renato for applying!</p>\r\n                 <p>Please make note of your applicant ID, you will need it for the rest of the steps. You can retrieve it at any time by repeating this step.</p>\r\n                 <p>The next step is problem solving a simple game using front end technologies. We'd like to see what you do with a loosely defined task. </p>\r\n                 <p>Post applicantID to</p>\r\n                 <p><b>/game</b> to receive gameID</p>\r\n          </div>\r\n          <div className=\"half-column code\" id=\"\">\r\n            <Highlight className='javascript'>\r\n                {`\r\nconst url = 'https://game.flowautobody.com.au/game'\r\nconst data = {\r\n              applicantId: '305036872197866051'  \r\n             }\r\n    axios.post(url, data, {\r\n              auth: {\r\n                     username: \"flow applicant\",\r\n                     password: \"lets code\",\r\n                    },\r\n              })\r\n        .then(function (response) { console.log(response);})\r\n        .catch(function (error) { console.log(error);});\r\n                `}\r\n            </Highlight>\r\n            </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n  );\r\n}\r\n","import React, { Component} from \"react\";\r\nimport Highlight from 'react-highlight'\r\nimport 'highlight.js/styles/atom-one-dark.css';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass api extends Component {\r\n\r\n    render(){\r\n        return (\r\n            <div className={\"section section-dark\"} id={\"section4\"}>\r\n              <div className=\"section-content\">\r\n              <h1>Third Task</h1>\r\n               <div className=\"two-columns padding-top\">\r\n                    <div className=\"half-column\">\r\n                        <h4>SIMPLE GAME</h4>\r\n                        <h4>-----------</h4>\r\n                        <p>Description:</p>\r\n                        <p>I'll pick an integer between 0 and 1,000,000. You submit guesses and I'll tell you whether you've won or not, and whether you should try a higher number or a lower number.</p>\r\n                        <p>Other than that, the HTTP responses are not designed to be incredibly helpful.</p>\r\n                        <p><b>Mechanics:</b></p>\r\n                            <ul>\r\n                                <li>All interaction needs the same Basic Auth you used on this step.</li>\r\n                                <li>The game url is at /game</li>\r\n                                <li>POST to the url with data field applicantId to start a new game. You'll get back a gameId.</li>\r\n                                <li>PUT to the url /game with data fields applicantId, gameId and guess to submit a guess. You'll get back result field. </li>\r\n                            </ul>\r\n                            <p>When the result is correct and you've won, there will be instructions for the last step.</p>\r\n                            <p>Have fun!</p>\r\n                  </div>\r\n                  <div className=\"half-column code\" id=\"\">\r\n                    <Highlight className='javascript'>\r\n                        {`\r\n// From 0 to 1,000,000 - First guess will be half way\r\n\r\nlet guessNumber = 500000     \r\nlet increment = 100000\r\nlet lastState = \"\"  \r\nlet tries = 0\r\n\r\nfunction repeat(){\r\n      const url = 'https://game.flowautobody.com.au/game'\r\n      const data = {\r\n        applicantId: \"305036872197866051\",\r\n        gameId: \"305080472391647811\",\r\n        guess: guessNumber,\r\n      };\r\n      axios\r\n        .put(url, data, {\r\n          auth: {\r\n            username: \"flow applicant\",\r\n            password: \"lets code\",\r\n          },\r\n        })\r\n        .then (response => {\r\n          setData({Response: response.data.result,Guess: response.data.guess,Tries: Data.Tries ++})\r\n          tries++;\r\n          if (response.data.result === \"higher\") {\r\n                guessNumber = Math.round(guessNumber + increment);\r\n                lastState = \"higher\";\r\n                repeat();\r\n          } if (response.data.result === \"lower\") {\r\n            if (lastState === \"lower\") {\r\n                guessNumber = Math.round(guessNumber - increment);\r\n            } else if (lastState === \"higher\") {\r\n                increment = Math.round(increment / 2);\r\n                guessNumber = Math.round(guessNumber - increment);   \r\n            }\r\n        repeat();    \r\n        lastState = \"lower\";  \r\n        } else {\r\n            console.log(\"Congratulations the numer is:\" + response.data.guess);\r\n          }\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n    }\r\n                        `}\r\n                    </Highlight>\r\n                    </div>\r\n              </div>\r\n              </div>\r\n              </div>\r\n          );\r\n    }\r\n\r\n}\r\n\r\nexport default api;\r\n\r\n","import React, { Component, useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction App() {\r\n\r\n const [Data,setData]=useState({\r\n        Response: 'Click Run to start',\r\n        Guess: 0,\r\n        Tries: 0\r\n    })\r\n\r\n        let guessNumber = 500000     \r\n        let increment = 100000\r\n        let lastState = \"\"  \r\n        let tries = 0\r\n\r\n        function repeat(){\r\n              const url = 'https://game.flowautobody.com.au/game'\r\n              const data = {\r\n                applicantId: \"305036872197866051\",\r\n                gameId: \"305080472391647811\",\r\n                guess: guessNumber,\r\n              };\r\n              axios\r\n                .put(url, data, {\r\n                  auth: {\r\n                    username: \"flow applicant\",\r\n                    password: \"lets code\",\r\n                  },\r\n                })\r\n                .then (response => {\r\n                  setData({Response: response.data.result,Guess: response.data.guess,Tries: Data.Tries ++})\r\n                  tries++;\r\n                  if (response.data.result === \"higher\") {\r\n                        guessNumber = Math.round(guessNumber + increment);\r\n                        lastState = \"higher\";\r\n                        repeat();\r\n                  } if (response.data.result === \"lower\") {\r\n                    if (lastState === \"lower\") {\r\n                        guessNumber = Math.round(guessNumber - increment);\r\n                    } else if (lastState === \"higher\") {\r\n                        increment = Math.round(increment / 2);\r\n                        guessNumber = Math.round(guessNumber - increment);   \r\n                    }\r\n                repeat();    \r\n                lastState = \"lower\";  \r\n                } else {\r\n                    console.log(\"Congratulations the numer is:\" + response.data.guess);\r\n                  }\r\n                })\r\n                .catch(function (error) {\r\n                  console.log(error);\r\n                });\r\n            }\r\n\r\n\r\n\r\n        return (\r\n            <div className={\"section section-dark\"} id={\"section5\"}>\r\n              <div className=\"section-content\">\r\n              <h1>Game on</h1>\r\n              <button onClick={repeat}>Run</button>\r\n              <div className=\"columns\">\r\n                  <div><h2>Guess:</h2> <h4>{Data.Guess}</h4></div>\r\n                  <div><h2>Response:</h2> <h4>{Data.Response}</h4></div>\r\n                  <div><h2>Attempts:</h2> <h4>{Data.Tries}</h4></div>\r\n              </div>\r\n              </div>\r\n              </div>\r\n          );\r\n     }\r\n\r\nexport default App;\r\n\r\n","import \"./App.css\";\nimport React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport Section1 from \"./components/Section1\";\nimport Section2 from \"./components/Section2\";\nimport Section3 from \"./components/Section3\";\nimport Section4 from \"./components/Section4\";\nimport Section5 from \"./components/Section5\";\nimport { BrowserRouter} from \"react-router-dom\";\n\n\nclass App extends Component {7\n\n  render() {\n    return (\n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Section1\n          title=\"About\"\n          dark={true}\n          id=\"section1\"\n          />\n         <Section2\n          title=\"Step 1\"\n          dark={false}\n          id=\"section2\"\n          />\n         <Section3\n          title=\"Step 2\"\n          dark={false}\n          id=\"section3\"\n          />\n          <Section4\n          title=\"Step 3\"\n          dark={false}\n          id=\"section4\"\n          />\n         <Section5\n          title=\"Step 3\"\n          dark={false}\n          id=\"section5\"\n          />\n        </div>\n       </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}